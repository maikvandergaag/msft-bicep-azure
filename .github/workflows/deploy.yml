name: Software Development Platform

on:
  workflow_run:
    workflows: ["Build Infra Structure as Code"]
    branches:
      - 'main'
  workflow_dispatch:

env:
  bicepfiles: '("main.bicep")'
  bicepparameterfiles: '("main-param.bicepparam" "main-param-prd.bicepparam")'
  bicepfolder: 'bicep/sdp/'
  artifactName: 'bicep-artifacts'
  deploymentFile: 'main.json'
  parameterFile: 'main-param.json'
  parameterFilePrd: 'main-param-prd.json'
  resourcegroupname: ${{ secrets.AZURE_SDP_RESOURCEGROUP }}

jobs:
  build:
    name: Build bicep
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - id: bicepbuild
        name: Build Bicep
        uses: ./.github/actions/buildbicep
        with:
          files: ${{env.bicepfiles}}
          parameter-files: ${{env.bicepparameterfiles}}
          bicep-folder: ${{env.bicepfolder}}
          artifactName: ${{ env.artifactName}}
  build-functionapp:
    name: Build function app
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - id: functionappbuild
        name: Build function app
        uses: ./.github/actions/buildfunctionapp
        with:
          dotnet-version: '8.0.*'
          functionapp-package-path: 'src/boskalis.sdp/boskalis.sdp.function'
          functionapp-project: 'boskalis.sdp.function.csproj'
  deploytst:
    environment: Test
    name: Deploy SDP TST
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      id-token: write
    needs: 
      - build
      - build-functionapp
    outputs:
      webapp: ${{ steps.deployresourcesiac.outputs.webapp }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: deployresourcesiac
        name: Deploy Azure Services
        uses: ./.github/actions/deployresources
        with:
           clientId: ${{ secrets.AZURE_CLIENT_ID }}
           tenantId: ${{ secrets.AZURE_TENANT_ID }}
           azureSubscription:  ${{ secrets.AZURE_SUBSCRIPTION_ID }}
           artifactName: ${{ env.artifactName}}
           deploymentFile: ${{ env.deploymentFile}}
           parameterFile: ${{ env.parameterFile}}
           resourcegroupname: ${{ env.resourcegroupname}}
           additionalParameters: 'githubToken=${{ secrets.GH_SOURCETOKEN }} githubTargetToken=${{ secrets.GH_TARGETTOKEN }} githubUserToken=${{ secrets.GH_USERTOKEN }} principalId=${{ secrets.AZURE_PRINCIPAL_ID }} githubWorkflow=${{ secrets.GH_SOURCEWORKFLOW }} githubRepo=${{ secrets.GH_SOURCEREPOSITORY }} githubOrganization=${{ secrets.GH_SOURCEORGANIZATION }} githubBranch=${{ secrets.GH_SOURCEBRANCH }} appRegClientId=${{secrets.SDP_AUTH_CLIENTID}}'
      - id: deployresources
        name: Deploy Azure Functions
        uses: ./.github/actions/deployfunctionapp
        with:
            clientId: ${{ secrets.AZURE_CLIENT_ID }}
            tenantId: ${{ secrets.AZURE_TENANT_ID }}
            azureSubscription:  ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            functionappname: ${{ steps.deployresourcesiac.outputs.webapp }}
  deployprd:
    environment: Prod
    name: Deploy SDP Prod
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    permissions:
      contents: read
      id-token: write
    needs: 
      - deploytst
    outputs:
      webapp: ${{ steps.deployresourcesiac.outputs.webapp }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: deployresourcesiac
        name: Deploy Azure Services
        uses: ./.github/actions/deployresources
        with:
           clientId: ${{ secrets.AZURE_CLIENT_ID }}
           tenantId: ${{ secrets.AZURE_TENANT_ID }}
           azureSubscription:  ${{ secrets.AZURE_SUBSCRIPTION_ID }}
           artifactName: ${{ env.artifactName}}
           deploymentFile: ${{ env.deploymentFile}}
           parameterFile: ${{ env.parameterFilePrd}}
           resourcegroupname: ${{ env.resourcegroupname}}
           additionalParameters: 'githubToken=${{ secrets.GH_SOURCETOKEN }} githubTargetToken=${{ secrets.GH_TARGETTOKEN }} githubUserToken=${{ secrets.GH_USERTOKEN }} principalId=${{ secrets.AZURE_PRINCIPAL_ID }} githubWorkflow=${{ secrets.GH_SOURCEWORKFLOW }} githubRepo=${{ secrets.GH_SOURCEREPOSITORY }} githubOrganization=${{ secrets.GH_SOURCEORGANIZATION }} githubBranch=${{ secrets.GH_SOURCEBRANCH }} appRegClientId=${{secrets.SDP_AUTH_CLIENTID}}'
      - id: deployresources
        name: Deploy Azure Functions
        uses: ./.github/actions/deployfunctionapp
        with:
           clientId: ${{ secrets.AZURE_CLIENT_ID }}
           tenantId: ${{ secrets.AZURE_TENANT_ID }}
           azureSubscription:  ${{ secrets.AZURE_SUBSCRIPTION_ID }}
           functionappname: ${{ steps.deployresourcesiac.outputs.webapp }}